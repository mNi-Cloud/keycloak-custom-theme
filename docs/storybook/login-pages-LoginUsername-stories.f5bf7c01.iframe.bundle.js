"use strict";(self.webpackChunkkeycloakify_starter=self.webpackChunkkeycloakify_starter||[]).push([[4781],{"./src/login/pages/LoginUsername.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,UsernameHidden:()=>UsernameHidden,WithEmailAsUsername:()=>WithEmailAsUsername,WithFormErrors:()=>WithFormErrors,WithRememberMeOption:()=>WithRememberMeOption,WithSocialProviders:()=>WithSocialProviders,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _KcPageStory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/login/KcPageStory.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const{KcPageStory}=(0,_KcPageStory__WEBPACK_IMPORTED_MODULE_0__.N)({pageId:"login-username.ftl"}),__WEBPACK_DEFAULT_EXPORT__={title:"login/login-username.ftl",component:KcPageStory},Default={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{})},WithEmailAsUsername={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{kcContext:{realm:{loginWithEmailAllowed:!0,registrationEmailAsUsername:!0}}})},UsernameHidden={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{kcContext:{usernameHidden:!0,realm:{loginWithEmailAllowed:!0}}})},WithSocialProviders={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{kcContext:{social:{providers:[{loginUrl:"google",alias:"google",providerId:"google",displayName:"Google",iconClasses:"fa fa-google"},{loginUrl:"microsoft",alias:"microsoft",providerId:"microsoft",displayName:"Microsoft",iconClasses:"fa fa-windows"}]},realm:{loginWithEmailAllowed:!0}}})},WithRememberMeOption={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{kcContext:{realm:{rememberMe:!0,loginWithEmailAllowed:!0},login:{rememberMe:"on"}}})},WithFormErrors={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{kcContext:{messagesPerField:{existsError:field=>"username"===field,getFirstError:()=>"Username is required"},realm:{loginWithEmailAllowed:!0},login:{username:""}}})},__namedExportsOrder=["Default","WithEmailAsUsername","UsernameHidden","WithSocialProviders","WithRememberMeOption","WithFormErrors"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => <KcPageStory />\n}",...Default.parameters?.docs?.source}}},WithEmailAsUsername.parameters={...WithEmailAsUsername.parameters,docs:{...WithEmailAsUsername.parameters?.docs,source:{originalSource:"{\n  render: () => <KcPageStory kcContext={{\n    realm: {\n      loginWithEmailAllowed: true,\n      registrationEmailAsUsername: true\n    }\n  }} />\n}",...WithEmailAsUsername.parameters?.docs?.source}}},UsernameHidden.parameters={...UsernameHidden.parameters,docs:{...UsernameHidden.parameters?.docs,source:{originalSource:"{\n  render: () => <KcPageStory kcContext={{\n    usernameHidden: true,\n    // Username field is hidden\n    realm: {\n      loginWithEmailAllowed: true\n    }\n  }} />\n}",...UsernameHidden.parameters?.docs?.source}}},WithSocialProviders.parameters={...WithSocialProviders.parameters,docs:{...WithSocialProviders.parameters?.docs,source:{originalSource:'{\n  render: () => <KcPageStory kcContext={{\n    social: {\n      providers: [{\n        loginUrl: "google",\n        alias: "google",\n        providerId: "google",\n        displayName: "Google",\n        iconClasses: "fa fa-google"\n      }, {\n        loginUrl: "microsoft",\n        alias: "microsoft",\n        providerId: "microsoft",\n        displayName: "Microsoft",\n        iconClasses: "fa fa-windows"\n      }]\n    },\n    realm: {\n      loginWithEmailAllowed: true\n    }\n  }} />\n}',...WithSocialProviders.parameters?.docs?.source}}},WithRememberMeOption.parameters={...WithRememberMeOption.parameters,docs:{...WithRememberMeOption.parameters?.docs,source:{originalSource:'{\n  render: () => <KcPageStory kcContext={{\n    realm: {\n      rememberMe: true,\n      // Enable "Remember Me" option\n      loginWithEmailAllowed: true\n    },\n    login: {\n      rememberMe: "on" // Set to "on" to simulate checkbox being checked\n    }\n  }} />\n}',...WithRememberMeOption.parameters?.docs?.source}}},WithFormErrors.parameters={...WithFormErrors.parameters,docs:{...WithFormErrors.parameters?.docs,source:{originalSource:'{\n  render: () => <KcPageStory kcContext={{\n    messagesPerField: {\n      existsError: (field: string) => field === "username",\n      getFirstError: () => "Username is required"\n    },\n    realm: {\n      loginWithEmailAllowed: true\n    },\n    login: {\n      username: ""\n    }\n  }} />\n}',...WithFormErrors.parameters?.docs?.source}}}}}]);