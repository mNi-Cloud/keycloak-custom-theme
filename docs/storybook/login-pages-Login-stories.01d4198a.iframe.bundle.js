"use strict";(self.webpackChunkkeycloakify_starter=self.webpackChunkkeycloakify_starter||[]).push([[7309],{"./src/login/pages/Login.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithEmailAsUsername:()=>WithEmailAsUsername,WithErrorMessage:()=>WithErrorMessage,WithImmutablePresetUsername:()=>WithImmutablePresetUsername,WithInvalidCredential:()=>WithInvalidCredential,WithOneSocialProvider:()=>WithOneSocialProvider,WithPresetUsername:()=>WithPresetUsername,WithSocialProviders:()=>WithSocialProviders,WithTwoSocialProviders:()=>WithTwoSocialProviders,WithoutPasswordField:()=>WithoutPasswordField,WithoutPasswordReset:()=>WithoutPasswordReset,WithoutRegistration:()=>WithoutRegistration,WithoutRememberMe:()=>WithoutRememberMe,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _KcPageStory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/login/KcPageStory.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const{KcPageStory}=(0,_KcPageStory__WEBPACK_IMPORTED_MODULE_0__.N)({pageId:"login.ftl"}),__WEBPACK_DEFAULT_EXPORT__={title:"login/login.ftl",component:KcPageStory},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args})},WithInvalidCredential={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{login:{username:"johndoe"},messagesPerField:{existsError:function(fieldName){for(var _len=arguments.length,otherFieldNames=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)otherFieldNames[_key-1]=arguments[_key];const fieldNames=[fieldName,...otherFieldNames];return fieldNames.includes("username")||fieldNames.includes("password")},get:fieldName=>"username"===fieldName||"password"===fieldName?"Invalid username or password.":""}}})},WithoutRegistration={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{realm:{registrationAllowed:!1}}})},WithoutRememberMe={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{realm:{rememberMe:!1}}})},WithoutPasswordReset={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{realm:{resetPasswordAllowed:!1}}})},WithEmailAsUsername={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{realm:{loginWithEmailAllowed:!1}}})},WithPresetUsername={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{login:{username:"max.mustermann@mail.com"}}})},WithImmutablePresetUsername={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{auth:{attemptedUsername:"max.mustermann@mail.com",showUsername:!0},usernameHidden:!0,message:{type:"info",summary:"Please re-authenticate to continue"}}})},WithOneSocialProvider={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{social:{displayInfo:!0,providers:[{loginUrl:"google",alias:"google",providerId:"google",displayName:"Google",iconClasses:"fa fa-google"}]}}})},WithTwoSocialProviders={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{social:{displayInfo:!0,providers:[{loginUrl:"google",alias:"google",providerId:"google",displayName:"Google",iconClasses:"fa fa-google"},{loginUrl:"microsoft",alias:"microsoft",providerId:"microsoft",displayName:"Microsoft",iconClasses:"fa fa-windows"}]}}})},WithSocialProviders={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{social:{displayInfo:!0,providers:[{loginUrl:"google",alias:"google",providerId:"google",displayName:"Google",iconClasses:"fa fa-google"},{loginUrl:"microsoft",alias:"microsoft",providerId:"microsoft",displayName:"Microsoft",iconClasses:"fa fa-windows"},{loginUrl:"facebook",alias:"facebook",providerId:"facebook",displayName:"Facebook",iconClasses:"fa fa-facebook"},{loginUrl:"instagram",alias:"instagram",providerId:"instagram",displayName:"Instagram",iconClasses:"fa fa-instagram"},{loginUrl:"twitter",alias:"twitter",providerId:"twitter",displayName:"Twitter",iconClasses:"fa fa-twitter"},{loginUrl:"linkedin",alias:"linkedin",providerId:"linkedin",displayName:"LinkedIn",iconClasses:"fa fa-linkedin"},{loginUrl:"stackoverflow",alias:"stackoverflow",providerId:"stackoverflow",displayName:"Stackoverflow",iconClasses:"fa fa-stack-overflow"},{loginUrl:"github",alias:"github",providerId:"github",displayName:"Github",iconClasses:"fa fa-github"},{loginUrl:"gitlab",alias:"gitlab",providerId:"gitlab",displayName:"Gitlab",iconClasses:"fa fa-gitlab"},{loginUrl:"bitbucket",alias:"bitbucket",providerId:"bitbucket",displayName:"Bitbucket",iconClasses:"fa fa-bitbucket"},{loginUrl:"paypal",alias:"paypal",providerId:"paypal",displayName:"PayPal",iconClasses:"fa fa-paypal"},{loginUrl:"openshift",alias:"openshift",providerId:"openshift",displayName:"OpenShift",iconClasses:"fa fa-cloud"}]}}})},WithoutPasswordField={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{realm:{password:!1}}})},WithErrorMessage={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KcPageStory,{...args,kcContext:{message:{summary:"The time allotted for the connection has elapsed.<br/>The login process will restart from the beginning.",type:"error"}}})},__namedExportsOrder=["Default","WithInvalidCredential","WithoutRegistration","WithoutRememberMe","WithoutPasswordReset","WithEmailAsUsername","WithPresetUsername","WithImmutablePresetUsername","WithOneSocialProvider","WithTwoSocialProviders","WithSocialProviders","WithoutPasswordField","WithErrorMessage"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} />\n}",...Default.parameters?.docs?.source}}},WithInvalidCredential.parameters={...WithInvalidCredential.parameters,docs:{...WithInvalidCredential.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    login: {\n      username: "johndoe"\n    },\n    messagesPerField: {\n      // NOTE: The other functions of messagesPerField are derived from get() and\n      // existsError() so they are the only ones that need to mock.\n      existsError: (fieldName: string, ...otherFieldNames: string[]) => {\n        const fieldNames = [fieldName, ...otherFieldNames];\n        return fieldNames.includes("username") || fieldNames.includes("password");\n      },\n      get: (fieldName: string) => {\n        if (fieldName === "username" || fieldName === "password") {\n          return "Invalid username or password.";\n        }\n        return "";\n      }\n    }\n  }} />\n}',...WithInvalidCredential.parameters?.docs?.source}}},WithoutRegistration.parameters={...WithoutRegistration.parameters,docs:{...WithoutRegistration.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} kcContext={{\n    realm: {\n      registrationAllowed: false\n    }\n  }} />\n}",...WithoutRegistration.parameters?.docs?.source}}},WithoutRememberMe.parameters={...WithoutRememberMe.parameters,docs:{...WithoutRememberMe.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} kcContext={{\n    realm: {\n      rememberMe: false\n    }\n  }} />\n}",...WithoutRememberMe.parameters?.docs?.source}}},WithoutPasswordReset.parameters={...WithoutPasswordReset.parameters,docs:{...WithoutPasswordReset.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} kcContext={{\n    realm: {\n      resetPasswordAllowed: false\n    }\n  }} />\n}",...WithoutPasswordReset.parameters?.docs?.source}}},WithEmailAsUsername.parameters={...WithEmailAsUsername.parameters,docs:{...WithEmailAsUsername.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} kcContext={{\n    realm: {\n      loginWithEmailAllowed: false\n    }\n  }} />\n}",...WithEmailAsUsername.parameters?.docs?.source}}},WithPresetUsername.parameters={...WithPresetUsername.parameters,docs:{...WithPresetUsername.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    login: {\n      username: "max.mustermann@mail.com"\n    }\n  }} />\n}',...WithPresetUsername.parameters?.docs?.source}}},WithImmutablePresetUsername.parameters={...WithImmutablePresetUsername.parameters,docs:{...WithImmutablePresetUsername.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    auth: {\n      attemptedUsername: "max.mustermann@mail.com",\n      showUsername: true\n    },\n    usernameHidden: true,\n    message: {\n      type: "info",\n      summary: "Please re-authenticate to continue"\n    }\n  }} />\n}',...WithImmutablePresetUsername.parameters?.docs?.source}}},WithOneSocialProvider.parameters={...WithOneSocialProvider.parameters,docs:{...WithOneSocialProvider.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    social: {\n      displayInfo: true,\n      providers: [{\n        loginUrl: "google",\n        alias: "google",\n        providerId: "google",\n        displayName: "Google",\n        iconClasses: "fa fa-google"\n      }]\n    }\n  }} />\n}',...WithOneSocialProvider.parameters?.docs?.source}}},WithTwoSocialProviders.parameters={...WithTwoSocialProviders.parameters,docs:{...WithTwoSocialProviders.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    social: {\n      displayInfo: true,\n      providers: [{\n        loginUrl: "google",\n        alias: "google",\n        providerId: "google",\n        displayName: "Google",\n        iconClasses: "fa fa-google"\n      }, {\n        loginUrl: "microsoft",\n        alias: "microsoft",\n        providerId: "microsoft",\n        displayName: "Microsoft",\n        iconClasses: "fa fa-windows"\n      }]\n    }\n  }} />\n}',...WithTwoSocialProviders.parameters?.docs?.source}}},WithSocialProviders.parameters={...WithSocialProviders.parameters,docs:{...WithSocialProviders.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    social: {\n      displayInfo: true,\n      providers: [{\n        loginUrl: "google",\n        alias: "google",\n        providerId: "google",\n        displayName: "Google",\n        iconClasses: "fa fa-google"\n      }, {\n        loginUrl: "microsoft",\n        alias: "microsoft",\n        providerId: "microsoft",\n        displayName: "Microsoft",\n        iconClasses: "fa fa-windows"\n      }, {\n        loginUrl: "facebook",\n        alias: "facebook",\n        providerId: "facebook",\n        displayName: "Facebook",\n        iconClasses: "fa fa-facebook"\n      }, {\n        loginUrl: "instagram",\n        alias: "instagram",\n        providerId: "instagram",\n        displayName: "Instagram",\n        iconClasses: "fa fa-instagram"\n      }, {\n        loginUrl: "twitter",\n        alias: "twitter",\n        providerId: "twitter",\n        displayName: "Twitter",\n        iconClasses: "fa fa-twitter"\n      }, {\n        loginUrl: "linkedin",\n        alias: "linkedin",\n        providerId: "linkedin",\n        displayName: "LinkedIn",\n        iconClasses: "fa fa-linkedin"\n      }, {\n        loginUrl: "stackoverflow",\n        alias: "stackoverflow",\n        providerId: "stackoverflow",\n        displayName: "Stackoverflow",\n        iconClasses: "fa fa-stack-overflow"\n      }, {\n        loginUrl: "github",\n        alias: "github",\n        providerId: "github",\n        displayName: "Github",\n        iconClasses: "fa fa-github"\n      }, {\n        loginUrl: "gitlab",\n        alias: "gitlab",\n        providerId: "gitlab",\n        displayName: "Gitlab",\n        iconClasses: "fa fa-gitlab"\n      }, {\n        loginUrl: "bitbucket",\n        alias: "bitbucket",\n        providerId: "bitbucket",\n        displayName: "Bitbucket",\n        iconClasses: "fa fa-bitbucket"\n      }, {\n        loginUrl: "paypal",\n        alias: "paypal",\n        providerId: "paypal",\n        displayName: "PayPal",\n        iconClasses: "fa fa-paypal"\n      }, {\n        loginUrl: "openshift",\n        alias: "openshift",\n        providerId: "openshift",\n        displayName: "OpenShift",\n        iconClasses: "fa fa-cloud"\n      }]\n    }\n  }} />\n}',...WithSocialProviders.parameters?.docs?.source}}},WithoutPasswordField.parameters={...WithoutPasswordField.parameters,docs:{...WithoutPasswordField.parameters?.docs,source:{originalSource:"{\n  render: args => <KcPageStory {...args} kcContext={{\n    realm: {\n      password: false\n    }\n  }} />\n}",...WithoutPasswordField.parameters?.docs?.source}}},WithErrorMessage.parameters={...WithErrorMessage.parameters,docs:{...WithErrorMessage.parameters?.docs,source:{originalSource:'{\n  render: args => <KcPageStory {...args} kcContext={{\n    message: {\n      summary: "The time allotted for the connection has elapsed.<br/>The login process will restart from the beginning.",\n      type: "error"\n    }\n  }} />\n}',...WithErrorMessage.parameters?.docs?.source}}}}}]);